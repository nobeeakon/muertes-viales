datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  
  notes    Note[]
  noteUrls Note2[]

  annotations Annotation[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Note2 {
  id String @id @default(cuid())

  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String


  noteUrls NoteUrl[]
  annotations Annotation[]
  validatedAnnotations ValidatedAnnotation[]
}

model NoteUrl {
  id String @id @default(cuid())
  url String

  note2 Note2 @relation(fields: [note2Id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  note2Id String
}

model Annotation {
  id String @id @default(cuid())
  propertyName String
  value String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String


  note2 Note2 @relation(fields: [note2Id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  note2Id String
}

model ValidatedAnnotation {
  id String @id @default(cuid())
  propertyName String
  value String

  note2 Note2 @relation(fields: [note2Id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  note2Id String
}

