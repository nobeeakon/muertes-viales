datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  username String @default("Anonimo")

  invalidNotesCounter Int @default(0)
  noteUrls Note[]

  annotations Annotation[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}



model Note {
  id String @id @default(cuid())

  createdAt DateTime @default(now())

  customId String @default("")

  comments String @default("")
  isUnavailableCounter Int @default(0)
  invalidCounter Int @default(0)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String


  noteUrls NoteUrl[]
  annotations Annotation[]
  validatedAnnotations ValidatedAnnotation[]
}

model NoteUrl {
  id String @id @default(cuid())
  url String

  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  noteId String
}

model Annotation {
  id String @id @default(cuid())
  propertyName String
  value String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String


  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  noteId String
}

model ValidatedAnnotation {
  id String @id @default(cuid())
  propertyName String
  value String

  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  noteId String
}

